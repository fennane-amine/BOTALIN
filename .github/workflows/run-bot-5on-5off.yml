name: AL-IN Bot 5min ON / 5min OFF (06:00-20:00 Paris) - cached

permissions:
  contents: write

on:
  workflow_dispatch:
  schedule:
    # schedule (cron) example — ajuste si tu veux autre chose
    - cron: '*/5 4-17 * * *'   # every 5 minutes between 04:00-17:59 UTC (≈06:00-19:59 Paris)

jobs:
  run-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 8
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # ----------------- CACHES -----------------
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache webdriver-manager (.wdm)
        uses: actions/cache@v4
        with:
          path: ~/.wdm
          key: ${{ runner.os }}-wdm-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-wdm-

      - name: Cache selenium / driver caches (optional)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/selenium
            ~/.cache
          key: ${{ runner.os }}-selenium-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-selenium-

      # ----------------- INSTALL -----------------
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          # prefer-binary may speed up by reducing compilation on runner
          pip install --prefer-binary -r requirements.txt

      # ----------------- RUN BOT -----------------
      - name: Run AL-IN bot (timeout controlled by script)
        env:
          EMAIL: ${{ secrets.EMAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
          SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
          SENDER_PASS: ${{ secrets.SENDER_PASS }}
          RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}
          MAX_RUN_SECONDS: 300
          POLL_INTERVAL: 15
          HEADLESS: true
        run: |
          python bot.py

      # ----------------- SAVE FILES -----------------
      - name: Commit offers_seen.json & candidatures_status.json if changed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PAT_FOR_PUSH: ${{ secrets.PAT_FOR_PUSH }}
        run: |
          if [[ -n "${PAT_FOR_PUSH}" ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git remote set-url origin https://x-access-token:${PAT_FOR_PUSH}@github.com/${{ github.repository }}
          else
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
          fi

          if [[ -f offers_seen.json || -f candidatures_status.json ]]; then
            git add offers_seen.json candidatures_status.json || true
            if ! git diff --cached --quiet; then
              git commit -m "Update seen & candidature status files" || true
              git push origin HEAD || true
            else
              echo "No changes to commit."
            fi
          else
            echo "No files to commit."
          fi

      - name: Upload screenshot on failure
        if: failure() || always()
        uses: actions/upload-artifact@v4
        with:
          name: selenium-screenshots
          path: "*.png"
